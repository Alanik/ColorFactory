<div id="mainContainer">
	<div id="gameWrapper">
		<div id="startGameCounter">Game Started</div>
		<div style="background: rgba(0,0,0,.85);">
			<div id="FPSMeterContainer" class="fps-meter-container">
			</div>
			<div id="logoContainer">
				<div>Frisky Woods<span style="font-family: Oxygen; font-size: 14px; padding-left: 10px; color: gray;">(ver. Alpha)</span></div>
				<div style="font-size: 20px;">HTML5 online multiplayer game</div>
			</div>
		</div>
		<div id="playerNamePopup">
			<div style="text-align:left;">
				<span style="font-size: 24px;">Enter player name:</span>
				<div>
					<input type="text" id="txtPlayerName" class="txtNameInput" placeholder="player name" />
					<button id="btnEnterPlayerName" class="myButton">ok</button>
				</div>
			</div>

		</div>

		<div id="lobbyContainer" style="display: none;">
			<ol style="font-size: 15px; margin-top: 0;">
				<li>Join available game room or create your own.</li>
				<li>Take a seat in the chosen game room by clicking on a white circle.</li>
				<li>Click 'ready' button. <img src="~/Images/Lobby/successGray.png" style="width:30px;vertical-align:middle;"/></li>
				<li>When all players are ready game session will begin.</li>
			</ol>

			@Html.Partial( "_LobbyView" )
		</div>

		<div id="playerCanvasContainer">
			<canvas id="playerCanvas" width="64" height="64" />
		</div>
		<div id="enemyCanvasContainer">
			<canvas id="enemyCanvas1" width="64" height="64" />
			<canvas id="enemyCanvas2" width="64" height="64" />
			<canvas id="enemyCanvas3" width="64" height="64" />
		</div>

		<div id="bulletsCanvasContainer">
			<canvas id="bulletsCanvas" />
		</div>

		<div id="mapContainer">
			<canvas id="mapCanvas" />
		</div>

		<div id="treesCanvasContainer" style="display:none;">
			<canvas id="treesCanvas" />
		</div>

		<div id="rightSideDisplayContainer">
			<div id="rightSideDisplay">
				@Html.Partial( "_RightSideDisplay" )
			</div>
		</div>

		<div id="effectsCanvasContainer">
			<canvas id="effectsCanvas" />
		</div>

		<div id="personalMenuContainer" style="display: none; width: 100px; height: 100px; border: 1px solid #00B2FF; background-image: url(/Images/PersonalMenu/menu-transparent.png); position: absolute; z-index: 2;">
			@Html.Partial( "_PersonalMenu" )
		</div>
	</div>

	<div id="leftSideContainer">
		<div style="font-size: 20px; color: rgb(207, 220, 213);">
			chat
		</div>

		<div id="chatWindowContainer">
			@Html.Partial( "_ChatWindow" )
		</div>
	</div>

	<section class="bottomSection">

		<div id="textDiv">
			<span>players online: </span><span id="spanPlayersOnline"></span>
		</div>
		<ul id="homePlayersOnlineList"></ul>

	</section>
</div>

<script type="text/javascript">

	////////////////////////////////////////////////////////////////////////////
	//global variables
	////////////////////////////////////////////////////////////////////////////
	var ctx = document.getElementById( "mapCanvas" ).getContext( "2d" );
	var $mapCanvas = $( "#mapCanvas" );

	var effectsCtx = document.getElementById( "effectsCanvas" ).getContext( "2d" );
	var $effectsCanvas = $( "#effectsCanvas" );

	var treesCtx = document.getElementById( "treesCanvas" ).getContext( "2d" );
	var $tressCanvas = $( "#treesCanvas" );

	var bulletsCtx = document.getElementById( "bulletsCanvas" ).getContext( "2d" );
	var bulletsCanvas = document.getElementById( "bulletsCanvas" );

	var playerCtx = document.getElementById( "playerCanvas" ).getContext( "2d" );
	var playerCanvas = document.getElementById( "playerCanvas" );

	var enemyCtx1 = document.getElementById( "enemyCanvas1" ).getContext( "2d" );
	var enemyCanvas1 = document.getElementById( "enemyCanvas1" );

	var enemyCtx2 = document.getElementById( "enemyCanvas1" ).getContext( "2d" );
	var enemyCanvas2 = document.getElementById( "enemyCanvas1" );

	var enemyCtx2 = document.getElementById( "enemyCanvas2" ).getContext( "2d" );
	var enemyCanvas2 = document.getElementById( "enemyCanvas2" );

	var enemyCtx3 = document.getElementById( "enemyCanvas3" ).getContext( "2d" );
	var enemyCanvas3 = document.getElementById( "enemyCanvas3" );

	var $mapContainer = $( "#mapContainer" );
	var $playerCanvasContainer = $( "#playerCanvasContainer" );
	var $enemyCanvasContainer = $( "#enemyCanvasContainer" );
	var $bulletsCanvasContainer = $( "#bulletsCanvasContainer" );
	var $effectsCanvasContainer = $( "#effectsCanvasContainer" );
	var $treesCanvasContainer = $("#treesCanvasContainer");

	var mainContainer = document.getElementById( "mainContainer" );

	//HUB START/////////////////////////////////////////////////////////////////////////////////////
	$.connection.hub.logging = true;
	$.connection.hub.start().done( function ()
	{
		myClientId = $.connection.hub.id;
	} ).fail( function ()
	{
		alert( "Could not Connect!" );
	} );
	////////////////////////////////////////////////////////////////////////////////////////////////

	gameConnection = $.connection.game;
	lobbyConnection = $.connection.lobby;


	////////////////////////////////////////////////////////////////////////////////////////////////
	//lobby functions
	////////////////////////////////////////////////////////////////////////////////////////////////

	lobbyConnection.client.clientReceiveRoomCreated = function ( roomName )
	{
		$( '#roomList' ).append( '<li name="' + roomName + '"><span>' + roomName + '</span><div class="playerCircle circleEmpty"></div><div class="playerCircle circleFullPlayerNotReady"></div></li>' );
	};

	lobbyConnection.client.clientReceiveSetRoomToPlayerOnRoomCreated = function ( roomName )
	{
		mainPlayerObj.player.setRoom( roomName );
	};

	lobbyConnection.client.clientReceivePlayerEnterLobby = function ( list )
	{
		$( '#roomList' ).empty();
		$( list ).each( function ( i, el )
		{
			$( '#roomList' ).append( '<li name="' + el + '">' + el + '<div class="playerCircle circleEmpty"></div><div class="playerCircle circleFullPlayerNotReady"></div></li>' );
		} );
		$( "#lobbyContainer" ).show();
	}

	$( ".btnCloseLobby" ).click( function ()
	{
		$( "#lobbyContainer" ).hide();
	} );

	$( "#btnCreateRoom" ).click( function ()
	{
		var $txt = $( "#txtRoomName" );
		var roomName = $txt.val().trim();
		if ( roomName )
			lobbyConnection.server.serverBroadcastCreateRoom( roomName );
		$txt.val( "" );
	} );

	$( "#txtRoomName" ).bind( 'keypress', function ( e )
	{
		var $txtBox, roomName;
		if ( e.keyCode == 13 )
		{
			$txtBox = $( "#txtRoomName" );
			roomName = $txtBox.val().trim();
			if ( roomName )
			{
				lobbyConnection.server.serverBroadcastCreateRoom( roomName );
				$txtBox.val( "" );
			}
		}
	} );

	$( "#btnBackToLobby" ).click( function ()
	{
		$( "#lobbyHeaderTitle" ).text( "Lobby" );
		$( "#roomName" ).text( "" );
		$( "#roomWrapper" ).hide();
		$( "#lobbyWrapper" ).show();
		$( "#lobbyContainer" ).find( "#createGameRoomContainer" ).show();
	} );

	$( "#roomList" ).on( "click", "li", function ()
	{
		var roomName = $( this ).attr( "name" );
		$( "#roomName" ).text( roomName );
		$( "#lobbyHeaderTitle" ).text( "Lobby / " + roomName );
		$( "#playerListInsideRoom li span" ).text( "" ).prev().removeClass( "circleFullPlayerNotReady" ).addClass( "circleEmpty" );
		$( "#lobbyWrapper" ).hide();
		$( "#roomWrapper" ).show();
		$( "#lobbyContainer" ).find( "#createGameRoomContainer" ).hide();
		lobbyConnection.server.serverBroadcastPlayerEnterRoom( roomName );
	} );

	lobbyConnection.client.clientReceivePlayerEnterRoom = function ( playerNamesList )
	{
		var $span, $circle, $tick, player, seat;

		$( '#playerListInsideRoom li' ).find( 'img' ).attr( 'src', 'Images/Lobby/successGray.png' );

		for ( var i = 0; i < playerNamesList.length; i++ )
		{
			player = playerNamesList[i];
			seat = player.SeatNumber;
			$li = $( '#playerListInsideRoom li[seatNumber="' + seat.toString() + '"]' );
			$span = $li.find( "span" );
			$circle = $span.prev();

			if ( player.IsReady === true )
			{
				$span.css( "color", "rgb(10,211,122)" );
				$circle.removeClass( "circleFullPlayerNotReady circleEmpty" ).addClass( "circleFullPlayerReady" );
				$li.find( 'img' ).attr( 'src', 'Images/Lobby/success.png' );
			}
			else
			{
				$span.css( "color", "rgb(238,68,68)" );
				$circle.removeClass( "circleFullPlayerReady circleEmpty" ).addClass( "circleFullPlayerNotReady" );
				$li.find( 'img' ).attr( 'src', 'Images/Lobby/successGray.png' );
			}

			$span.text( player.Name );
		}
	};

	$( document ).on( "click", "#playerListInsideRoom .circleEmpty", function ()
	{
		var $theCircle = $( this );
		var roomName = $( "#roomName" ).text();

		mainPlayerObj.player.setRoom( roomName );

		var seatNumber = parseInt( $theCircle.parent().attr( "seatNumber" ) );
		lobbyConnection.server.serverBroadcastPlayerTakeSeat( roomName, seatNumber );
	} );

	lobbyConnection.client.clientReceivePlayerTakeSeat = function ( playerNamesList )
	{
		var $span, $circle, $tick, player, seat;

		for ( var i = 0; i < playerNamesList.length; i++ )
		{
			player = playerNamesList[i];
			seat = player.SeatNumber;
			$li = $( '#playerListInsideRoom li[seatNumber="' + seat.toString() + '"]' );
			$span = $li.find( "span" );
			$circle = $span.prev();

			if ( player.IsReady === true )
			{
				$span.css( "color", "rgb(10,211,122)" );
				$circle.removeClass( "circleFullPlayerNotReady circleEmpty" ).addClass( "circleFullPlayerReady" );
				$li.find( 'img' ).attr( 'src', 'Images/Lobby/success.png' );

			}
			else
			{
				$span.css( "color", "rgb(238,68,68)" );
				$circle.removeClass( "circleFullPlayerReady circleEmpty" ).addClass( "circleFullPlayerNotReady" );
				$li.find( 'img' ).attr( 'src', 'Images/Lobby/successGray.png' );

			}
			$span.text( player.Name );
		}
	};

	//on player ready click/////////////////////////////////////////////////////////////////////////////////////////////////

	$( document ).on( "click", "#playerListInsideRoom li img", function ()
	{
		$img = $( this );
		var roomName = $( "#roomName" ).text();
		var seatNumber = parseInt( $img.parent().attr( "seatNumber" ) );
		lobbyConnection.server.serverBroadcastPlayerIsReady( roomName, seatNumber );
	} );

	lobbyConnection.client.clientReceivePlayerIsReady = function ( seatNumber )
	{
		var $li = $( '#playerListInsideRoom li[seatNumber="' + seatNumber.toString() + '"]' );
		$li.find( 'img' ).attr( 'src', 'Images/Lobby/success.png' ).next().removeClass( "circleFullPlayerNotReady" ).addClass( "circleFullPlayerReady" ).next().css( "color", "rgb(10,211,122)" );
	};

	lobbyConnection.client.clientReceivePlayerIsNotReady = function ( seatNumber )
	{
		var $li = $( '#playerListInsideRoom li[seatNumber="' + seatNumber.toString() + '"]' );
		$li.find( 'img' ).attr( 'src', 'Images/Lobby/successGray.png' ).next().removeClass( "circleFullPlayerReady" ).addClass( "circleFullPlayerNotReady" ).next().css( "color", "rgb(238,68,68)" );
	};

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//chat functions
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	lobbyConnection.client.clientReceiveChatMessage = function ( message, playerName )
	{
		var $chatContent = $( "#chatContent" );
		var $txtBoxChat = $( "#txtBoxChat" );
		var msg;

		if ( playerName === mainPlayerObj.player.getName() )
		{
			msg = '<div style="position:relative;padding:5px 10px;width:380px;background:rgb(15,15,15);border-top:1px solid rgb(43,43,43);">' + '<span style="font-size:12px;color:rgb(163, 255, 0);">' + playerName + '</span>' + " - " + '<span style="font-size:16px;word-wrap: break-word;">' + message + '</span>' + '</div>';
		}
		else
		{
			msg = '<div style="position:relative;padding:5px 10px;width:380px;">' + '<span style="font-size:12px;color:rgb(181, 248, 96);">' + playerName + '</span><span style="font-size:16px;word-wrap: break-word;color:gray;">' + " - " + message + '</span>' + '</div>';
		}

		$chatContent.append( msg );
	}

	$( "#txtBoxChat" ).bind( 'keypress', function ( e )
	{
		var $txtBox, txt;
		if ( e.keyCode == 13 )
		{
			$txtBox = $( "#txtBoxChat" );
			txt = $txtBox.val();
			if ( txt !== "" )
			{
				lobbyConnection.server.serverBroadcastChatMessage( txt, mainPlayerObj.player.getName() );

				$txtBox.val( "" );
			}
		}
	} );

	$( "#chatEnterBtn" ).click( function ()
	{
		var $textBox = $( "#txtBoxChat" );
		var text = $textBox.val();

		if ( text !== "" )
		{
			lobbyConnection.server.serverBroadcastChatMessage( text, mainPlayerObj.player.getName() );
			$textBox.val( "" );
		}
	} );


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//start game, begin in Lobby Hub then communicate to Game Hub from now on throughout the game session
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	lobbyConnection.client.clientReceiveInitializeGame = function ( name )
	{
		$( "#rightSideDisplayContainer" ).show();
		gameConnection.server.serverBroadcastStartGameFromGameHub( name );
	}
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//ERROR messages
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	lobbyConnection.client.clientReceivePlayerEnterRoomErrorPlayerAlreadyInARoom = function ()
	{
		alert( "You already took a seat in a room. You need to leave the room you are sitting at in order to sit down here." );
	}

	lobbyConnection.client.clientReceivePlayerCreateRoomErrorPlayerIsAlreadyAdmin = function ()
	{
		alert( "You are already an admin of a room. You need to leave your room in order to create a new one." );
	}

	lobbyConnection.client.clientReceiveSpecifiedRoomDoesNotExist = function ( roomName )
	{
		alert( "Game room: " + roomName + " does not exist." )
	};

	////////////////////////////////////////////////////////////////////////////////////////////////////
	//Home Functions
	////////////////////////////////////////////////////////////////////////////////////////////////////

	// Create connection

	$( "#txtPlayerName" ).bind( 'keypress', function ( e )
	{
		var $txtBox, playerName;
		if ( e.keyCode == 13 )
		{
			$txtBox = $( "#txtPlayerName" );
			playerName = $txtBox.val();
			if ( playerName !== "" )
			{

				mainPlayerObj.player.setName( playerName );
				$( "#playerName" ).text( playerName );

				var player = { name: playerName, connectionId: myClientId };

				lobbyConnection.server.serverBroadcastAddPlayerToPlayerCollection( player );

				$( "#playerNamePopup" ).hide();
			}
		}
	} );

	$( "#btnEnterPlayerName" ).click( function ()
	{
		var playerName = $( "#txtPlayerName" ).val();

		mainPlayerObj.player.setName( playerName );
		$( "#playerName" ).text( playerName );

		var player = { name: playerName, connectionId: myClientId };

		lobbyConnection.server.serverBroadcastAddPlayerToPlayerCollection( player );

		$( "#playerNamePopup" ).hide();
	} );

	lobbyConnection.client.clientReceiveOnDisconnect = function ( name, count )
	{
		var $list = $( "#homePlayersOnlineList" );
		var $node = $list.find( "li:contains(" + name + ")" );
		$node.remove();
		$( '#spanPlayersOnline' ).html( count );
	};

	lobbyConnection.client.clientReceiveAddPlayerToPlayerCollection = function ( count, names )
	{
		$( "#homePlayersOnlineList" ).empty();

		for ( var i = 0; i < names.length; i++ )
		{
			$( "#homePlayersOnlineList" ).append( "<li>" + names[i] + "</li>" );
		}

		$( '#spanPlayersOnline' ).html( count );

		lobbyConnection.server.serverBroadcastPlayerEnterLobby();
	};

	lobbyConnection.client.clientReceivePlayerLeaveSeat = function ( roomName, seatNumber )
	{
		if ( $( "#lobbyHeaderTitle" ).text() == roomName )
		{
			var $li = $( '#playerListInsideRoom li[seatNumber="' + seatNumber.toString() + '"]' );
			var $circle = $li.find( ".playerCircleInsideRoom" ).removeClass( "circleFullPlayerNotReady" ).addClass( "circleEmpty" );
			$circle.next().css( "color", "rgb(238,68,68)" ).text( "" );
			$circle.prev().attr( "src", "Images/Lobby/successGray.png" );
		}
	};

	lobbyConnection.client.clientReceiveAdminLeaveSeat = function ( roomName )
	{
		alert( "Admin has left your room. Game room: " + roomName + " is now closed so please find another room." );
		$( '#roomList li[name="' + roomName + '"]' ).remove();
		if ( $( "#lobbyHeaderTitle" ).text() == roomName )
		{
			$( "#lobbyHeaderTitle" ).text( "Lobby" )
			$( "#roomWrapper" ).hide();
			$( "#lobbyWrapper" ).show();
		}
	};
</script>

<script src="~/Scripts/Models/HelperClasses/Settings.js" type="text/javascript"></script>
<script src="~/Scripts/Models/HelperClasses/Map.js" type="text/javascript"></script>
<script src="~/Scripts/Models/Player/Sprite.js"></script>
<script src="~/Scripts/Models/Player/Character.js"></script>
<script src="~/Scripts/Models/Player/CharacterAnimations.js"></script>
<script src="~/Scripts/Models/Player/Player.js" type="text/javascript"></script>
<script src="~/Scripts/Models/HelperClasses/Effects.js" type="text/javascript"></script>
<script src="~/Scripts/Models/HelperClasses/Cursor.js" type="text/javascript"></script>
<script src="~/Scripts/Models/Game.js" type="text/javascript"></script>
<script src="~/Scripts/Models/Bullet.js"></script>
<script src="~/Scripts/Models/HelperClasses/AnimationManager.js"></script>
<script src="~/Scripts/Models/TextAnimation.js"></script>
<script type="text/javascript">

	$( function ()
	{
		var SETTINGS = new Settings();
		var CURSOR = new Cursor( SETTINGS.map );
		var EFFECTS = new Effects();
		var ANIMATION_MANAGER = new AnimationManager();
		var MAP = new Map( SETTINGS.map );

		var animations = new CharacterAnimations();
		var squirrel = new Character( "squirrel", "Wiewiórka Mimi", animations.squirrel );
		var mainPlayer = new Player( squirrel, true );
		mainPlayer.setBullet( new Bullet( "Images/tileSheet/Bullet/bullet.png" ) );

		//TODO: change from global variable to private - currently used in index.cshtml
		mainPlayerObj = { "player": mainPlayer, "ctx": playerCtx, "canvas": playerCanvas };

		GAME = new Game( SETTINGS, CURSOR, EFFECTS, ANIMATION_MANAGER, MAP, mainPlayerObj );

		//TODO: refactor 
		ANIMATION_MANAGER.game = GAME;

		GAME.initialize();
		GAME.onGameStart();
	} );
</script>
